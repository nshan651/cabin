services:
  proxy:
    image: traefik:latest
    container_name: traefik
    restart: unless-stopped
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.provider=duckdns"
      - "--certificatesresolvers.letsencrypt.acme.email=mail@mail.com"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.disablePropagationCheck=true"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.resolvers=1.1.1.1:53,8.8.8.8:53"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.http.tls=true"
      - "--entrypoints.websecure.http.tls.certResolver=letsencrypt"
      - "--entrypoints.websecure.http.tls.domains[0].main=${DOMAIN}"
      - "--entrypoints.websecure.http.tls.domains[0].sans=*.${DOMAIN}"
    volumes:
      - "./data/traefik/letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    # labels:
    #   - 'traefik.enable=true'
    #   - 'traefik.http.routers.api.rule=Host(`dashboard.${DOMAIN}`)'
    #   - 'traefik.http.routers.api.entryPoints=websecure'
    #   - 'traefik.http.routers.api.service=api@internal'
    #   #- 'traefik.http.routers.api.middlewares=authelia@docker'
    ports:
      - "443:443"
      - "80:80"
    environment:
      DUCKDNS_TOKEN: "${DUCKDNS_TOKEN}"
    networks:
      - net
  
  # Personal website
  website:
    image: nginx:latest
    container_name: porto_website
    restart: unless-stopped
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.website.rule=Host(`${DOMAIN}`)'
      - 'traefik.http.routers.website.entryPoints=websecure'
      #- 'traefik.http.routers.website.tls=true'
      #- 'traefik.http.routers.website.tls.certResolver=letsencrypt'
    volumes:
      - ./site:/usr/share/nginx/html:ro
    networks:
      - net

  # FreshRSS
  freshrss:
    image: freshrss/freshrss:latest
    container_name: porto_rss
    restart: unless-stopped
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.freshrss.rule=Host(`rss.${DOMAIN}`)'
      - 'traefik.http.routers.freshrss.entryPoints=websecure'
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
    volumes:
      - freshrss:/var/www/freshrss/data
    networks:
      - net

  nextcloud:
    image: nextcloud:apache
    container_name: porto_nextcloud
    restart: unless-stopped
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.nextcloud.rule=Host(`nextcloud.${DOMAIN}`)'
      - 'traefik.http.routers.nextcloud.entryPoints=websecure'
    volumes:
      - nextcloud:/var/www/html:z
      # Comment this out before initial setup and admin creation.
      - /mnt/media/dox/pix:/var/www/html/data/nshan651/files/Photos:ro
    environment:
      - NEXTCLOUD_TRUSTED_DOMAINS=nextcloud.${DOMAIN}
      - OVERWRITEPROTOCOL=https
      - OVERWRITEHOST=nextcloud.${DOMAIN}
    networks:
      - net

volumes:
  freshrss:
  nextcloud:

networks:
  net:
    driver: bridge
